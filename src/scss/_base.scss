:root {
  --color-pos: #{$color-black};
  --color-pos--2: #{lighten($color-black, 40)};
  --color-neg: #{$color-white};
  --color-neg--2: #{lighten($color-white, 5)};
  --shadow: 0 15px 80px 0px #{rgba($color-black, 0.25)},
            0 -5px 10px 0px #{rgba($color-white, 0.1)},
            0 5px 10px 0px #{rgba($color-black, 0.1)};
  --shadow--2: 0 10px 20px 0px #{rgba($color-black, 0.35)},
               0 -5px 8px 0px #{rgba($color-white, 0.1)},
               0 5px 8px 0px #{rgba($color-black, 0.25)};

  @media (prefers-color-scheme: dark) {
    --color-pos: #{$color-white};
    --color-pos--2: #{lighten($color-white, 5)};
    --color-neg: #{$color-black};
    --color-neg--2: #{lighten($color-black, 5)};
    --shadow: 0 5px 45px -5px #{rgba(0, 0, 0, 0.75)},
              0 -5px 100px 0px #{rgba($color-white, 0.03)};
    --shadow--2: 0 5px 8px 0px #{rgba($color-black, 0.25)};
  }
}

// extends
%pop-out {
  @include gs-breakpoint-loop($grid-gutter) using ($gutter) {
    $offset: $gutter * 1.5;

    width: calc(100% + #{$offset * 2});
    max-width: calc(32rem + #{$offset * 2});
    margin-left: -$offset;
    margin-right: -$offset;
  }

  @include gs-breakpoint(medium, up) {
    @include gs-breakpoint-loop($grid-gutter) using ($gutter) {
      $offset: $gutter * 2;

      width: calc(100% + #{$offset});
      max-width: calc(32rem + #{$offset});
      margin-right: -$offset;
      margin-left: 0;
    }
  }

  @include gs-breakpoint(large, up) {
    @include gs-breakpoint-loop($grid-gutter) using ($gutter) {
      $offset: $gutter * 2;

      max-width: calc(32rem + #{$offset});
      margin-left: -$offset;
    }
  }
}

// general
body {
  color: var(--color-pos);
  font-family: $font-content;
  font-weight: 400;
  background: var(--color-neg);
}

a {
  color: var(--color-pos--2);
  text-decoration: none;
  border-bottom: 3px solid $color-major;

  &:hover,
  &:active {
    color: var(--color-pos);
  }
}

.wrapper {
  width: 100%;
  max-width: $grid-wrapper-max-width * 1px;
  margin: 0 auto;

  @include gs-breakpoint-loop($grid-gutter) using ($gutter) {
    padding-left: $gutter;
    padding-right: $gutter;
  }
}

.view {
  min-height: 100vh;
  overflow: hidden;
}

.content-block {
  display: grid;
  max-width: $grid-wrapper-max-width * 1px;
  margin: 0 auto;
  grid-template-rows: auto auto;
  grid-template-columns: minmax(auto, 300px) minmax(62%, auto);
  position: relative;

  @include gs-breakpoint-loop($grid-gutter) using ($gutter) {
    grid-gap: gs-spacer(1) $gutter;
    padding: gs-spacer(1) $gutter 0;
  }
}

.logo {
  grid-area: 1/1/2/2;
  align-self: center;
  position: relative;
  // width: 28vw;
  // top: -1rem;
  // left: -1rem;

  a {
    display: block;
    border-bottom: 0;
    transition: transform 0.2s ease-out;

    &::before {
      content: "";
      width: 100vw;
      background: var(--color-pos);
      position: absolute;
      top: 0;
      right: 50%;
      bottom: 0;

      @media (prefers-color-scheme: dark) {
        background: transparent;
        border: 5px solid var(--color-pos);
        border-right: 0;
        z-index: 1;
      }
    }

    &:hover,
    &:active {
      transform: translateX(8px);
    }
  }

  &__wrapper {
    width: 100%;
    padding-top: 100%;
    background-image: url('/assets/images/logo.svg');
    background-position: center;
    background-size: cover;
    border-radius: 50%;
    position: relative;
    overflow: hidden;

    @media (prefers-color-scheme: dark) {
      &::after {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        border: 5px solid var(--color-pos);
        border-left-color: transparent;
        border-bottom-color: transparent;
        border-radius: 50%;
        z-index: 1;
        transform: rotate(45deg);
      }
    }

    img {
      @extend %sr-only;
    }
  }
}
